openapi: 3.0.1
info:
  title: Users API
  description: Users sample application
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: v0.0.1
servers:
  - url: http://localhost:8080/api
    description: Generated server url
tags:
  - name: users
    description: the users API
paths:
  /users/{id}:
    get:
      tags:
        - users
      summary: ListUser
      operationId: listUserUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
    put:
      tags:
        - users
      summary: UpdateUser
      operationId: updateUserUsingPut
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSummary'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
      security:
        - bearerAuth: []
    delete:
      tags:
        - users
      summary: DeleteUser
      operationId: deleteUserUsingDelete
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - users
      operationId: listUsersUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
    post:
      tags:
        - users
      summary: addUser
      operationId: addUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearerAuth: []
  /authenticate:
    post:
      tags:
        - hello-ressource
      operationId: createAuthenticationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /hello:
    get:
      tags:
        - hello-ressource
      operationId: hello_6
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
        - hello-ressource
      operationId: hello_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - hello-ressource
      operationId: hello
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - hello-ressource
      operationId: hello_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
        - hello-ressource
      operationId: hello_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
        - hello-ressource
      operationId: hello_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
        - hello-ressource
      operationId: hello_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UserSummary:
      type: object
      properties:
        solde:
          type: number
        isBlocked:
          type: boolean
      description: Updated user object
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
        userPassword:
          type: string
        solde:
          type: number
        isAdmin:
          type: boolean
        isBlocked:
          type: boolean
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
